// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.Main.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    [Migration("20190430141643_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Blog.Article", b =>
                {
                    b.Property<Guid>("ArticleGUID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleAversionNumber");

                    b.Property<string>("ArticleBackgroundImageURL")
                        .HasMaxLength(128);

                    b.Property<string>("ArticleContentURL")
                        .HasMaxLength(128);

                    b.Property<DateTime>("ArticleCreateTime");

                    b.Property<int>("ArticleLastEditingTime");

                    b.Property<int>("ArticleLoveNumber");

                    b.Property<Guid>("ArticlePigeonholeClassificationGUID");

                    b.Property<int>("ArticleReadNum");

                    b.Property<int>("ArticleStatus");

                    b.Property<string>("ArticleSynopsis")
                        .HasMaxLength(300);

                    b.Property<string>("ArticleTitle")
                        .HasMaxLength(32);

                    b.Property<string>("ArticleTitlePrefix")
                        .HasMaxLength(16);

                    b.Property<int>("ArticleVisualStatus");

                    b.Property<Guid>("ArticleWriter");

                    b.Property<bool>("IsTop");

                    b.Property<int>("OrderNumber");

                    b.Property<int>("Row_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Row_ID");

                    b.HasKey("ArticleGUID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Blog.ArticlePigeonholeClassification", b =>
                {
                    b.Property<Guid>("Article_PigeonholeClassificationGUID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Article_PigeonholeClassificationClickNum");

                    b.Property<byte>("Article_PigeonholeClassificationDeepness");

                    b.Property<string>("Article_PigeonholeClassificationName")
                        .HasMaxLength(16);

                    b.Property<Guid>("Article_PigeonholeClassificationPGUID");

                    b.Property<int>("OrderNumber");

                    b.Property<int>("Row_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Row_ID");

                    b.HasKey("Article_PigeonholeClassificationGUID");

                    b.ToTable("PigeonholeClassifications");
                });

            modelBuilder.Entity("Blog.Attach", b =>
                {
                    b.Property<Guid>("Attach_GUID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Attach_ExtName")
                        .HasMaxLength(32);

                    b.Property<string>("Attach_MD5")
                        .HasMaxLength(32);

                    b.Property<string>("Attach_Name")
                        .HasMaxLength(32);

                    b.Property<string>("Attach_Path")
                        .HasMaxLength(128);

                    b.Property<int>("Attach_Size");

                    b.Property<int>("OrderNumber");

                    b.Property<int>("Row_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Row_ID");

                    b.HasKey("Attach_GUID");

                    b.ToTable("Attaches");
                });

            modelBuilder.Entity("Blog.UserAccount", b =>
                {
                    b.Property<Guid>("User_AccountGUID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("BlogAddress")
                        .HasMaxLength(128);

                    b.Property<string>("City")
                        .HasMaxLength(16);

                    b.Property<string>("County")
                        .HasMaxLength(16);

                    b.Property<string>("Intro")
                        .HasMaxLength(32);

                    b.Property<string>("Location_City")
                        .HasMaxLength(16);

                    b.Property<string>("Location_County")
                        .HasMaxLength(16);

                    b.Property<string>("Location_Nation")
                        .HasMaxLength(16);

                    b.Property<string>("Location_Province")
                        .HasMaxLength(16);

                    b.Property<string>("Nation")
                        .HasMaxLength(16);

                    b.Property<string>("Occupation")
                        .HasMaxLength(16);

                    b.Property<int>("OrderNumber");

                    b.Property<string>("Province")
                        .HasMaxLength(16);

                    b.Property<int>("Row_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Row_ID");

                    b.Property<bool>("Sex");

                    b.Property<string>("UserEMail")
                        .HasMaxLength(64);

                    b.Property<string>("UserIconURL")
                        .HasMaxLength(128);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<byte[]>("UserPhone")
                        .HasMaxLength(11);

                    b.Property<byte[]>("User_AccountLastLoginIPAddress")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<DateTime>("User_AccountLastLoginTime");

                    b.Property<int>("User_AccountLevel");

                    b.Property<byte[]>("User_AccountRegisterIPAddress")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<DateTime>("User_AccountRegisterTime");

                    b.Property<int>("User_AccountStatus");

                    b.Property<string>("User_Login")
                        .HasMaxLength(16);

                    b.Property<string>("User_Password")
                        .HasMaxLength(32);

                    b.HasKey("User_AccountGUID");

                    b.ToTable("AccountEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
